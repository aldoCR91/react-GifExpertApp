{"version":3,"sources":["components/AddCategories.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","setImages","useEffect","then","imgs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAqCeA,MAjCf,YAA2C,IAAlBC,EAAiB,EAAjBA,cAAiB,EAEFC,mBAAS,cAFP,mBAE/BC,EAF+B,KAEnBC,EAFmB,KAkBtC,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAnBW,SAACP,GACpBF,EAAeE,EAAEQ,OAAOF,Y,uBCTnBG,EAAM,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEZC,EAFY,iDAEqCC,UAAWH,GAFhD,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIKA,EAAKC,OAJV,uBAIVC,EAJU,EAIVA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAcXM,GAdW,4CAAH,sDCENO,EAAc,SAAC,GAAyB,EAAvBJ,GAAwB,IAApBC,EAAmB,EAAnBA,MAAOV,EAAY,EAAZA,IAErC,OACI,yBAAKc,UAAU,QACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,2BAAKA,KCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,EAETd,mBAAS,IAFA,mBAE9B2B,EAF8B,KAEtBO,EAFsB,KAQrC,OAJAC,qBAAU,WACNtB,EAAQC,GAAWsB,MAAM,SAAAC,GAAI,OAAIH,EAAWG,QAC7C,CAAEvB,IAGD,oCACI,4BAAKA,GACL,yBAAKgB,UAAU,aAGPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eAAac,IAAKd,EAAIC,IAAQD,UCfzCe,EAAe,WAAO,IAAD,EAEMvC,mBAAS,CAAC,eAFhB,mBAEvBQ,EAFuB,KAEXT,EAFW,KAI9B,OACI,oCACI,4DAEA,kBAAC,EAAD,CACIA,cAAgBA,IAGpB,6BAEA,4BAEQS,EAAWe,KAAI,SAAAT,GAAQ,OAEnB,kBAAC,EAAD,CACIA,SAAWA,EACXwB,IAAMxB,U,MCnBlC0B,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4148807d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\n\nfunction AddCategories({ setCategories }) {\n\n    const [inputValue, setInputValue] = useState('Hola mundo');\n\n    const handleOnChange = (e) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if( inputValue.trim().length > 2){\n            \n            setCategories( categories => [ inputValue, ...categories ]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleOnChange }\n            />\n        </form>\n    )\n}\n\nAddCategories.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategories\n","export const getGif = async ( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=59G0BwK3TVxLUwVJFOk538XiYgiaz7Fd`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }  ) => {\n\n    return (\n        <div className=\"card\">\n            <img src={ url } alt={ title }  /> \n            <p>{ title }</p>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react'\nimport { getGif } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const [images, setImages] = useState([]);\n\n    useEffect(() => {\n        getGif( category ).then( imgs => setImages( imgs ) );\n    }, [ category ]);\n\n    return (\n        <>\n            <h3>{category}</h3>\n            <div className=\"card-grid\">\n\n                {\n                    images.map(img => (\n                        <GifGridItem key={img.id} {...img} />\n                    ))\n                }\n\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport AddCategories from './components/AddCategories';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Black Pink']);\n\n    return (\n        <>\n            <h2>Buscador de gifs para Abril </h2>\n\n            <AddCategories\n                setCategories={ setCategories }\n            />\n\n            <hr />\n\n            <ol>\n                {\n                    categories.map(category => \n                    \n                        <GifGrid\n                            category={ category }\n                            key={ category }\n                        />\n                    )\n                }\n            </ol>\n        </>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n\n  document.getElementById('root')\n);"],"sourceRoot":""}